{"version":3,"sources":["../main.ts","../src/User.ts","../src/Article.ts"],"sourcesContent":["import Article, { ArticleType, IArticle } from \"./src/Article\";\nimport User, { IUser } from \"./src/User\";\n\n\nexport {\n    Article, IArticle, ArticleType,\n    User, IUser\n}\n","/**\n * An interface representing a user.\n */\nexport interface IUser {\n    username: string\n    email: string\n    displayName: string\n    verified: boolean\n    registeredAt: string\n}\n\n/**\n * A class representing a user.\n */\nexport default class User implements IUser {\n    /**\n     * The default constructor with no arguments.\n     */\n    constructor();\n\n    /**\n     * Overloaded constructor for instantiating a User with a generic object.\n     * @param obj - A partial object representing IUser\n     */\n    constructor(obj: Partial<IUser>);\n\n    constructor(obj?: Partial<IUser>) {\n        this.username = obj?.username ?? \"\"\n        this.email = obj?.email ?? \"\"\n        this.displayName = obj?.displayName ?? \"\"\n        this.verified = obj?.verified ?? false\n        this.registeredAt = (obj?.registeredAt ? new Date(obj.registeredAt) : new Date()).toISOString()\n    }\n\n    username: string\n    email: string\n    displayName: string\n    verified: boolean\n    registeredAt: string\n}\n","import User, { IUser } from \"./User\";\n\n/**\n * An enum representing the two types of articles published to the website.\n */\nexport enum ArticleType {\n    news, research\n}\n\n/**\n * An interface representing an article.\n */\nexport interface IArticle {\n    id: number\n    title: string\n    subtitle: string\n    content: string\n    publisher: IUser\n    articleType: ArticleType\n    publishedAt: string\n    lastEditedAt: string\n    media: string[]\n}\n\n/**\n * A class representing an article.\n */\nexport default class Article implements IArticle {\n    /**\n     * The default constructor with no arguments.\n     */\n    constructor();\n\n    /**\n     * Overloaded constructor for instantiating an Article with a generic object.\n     * @param obj - A partial object representing IArticle\n     */\n    constructor(obj: Partial<IArticle>);\n\n    constructor(obj?: Partial<IArticle>) {\n        this.id = obj?.id ?? 0\n        this.title = obj?.title ?? \"Default Title\"\n        this.articleType = obj?.articleType ?? ArticleType.news\n        this.subtitle = obj?.subtitle ?? \"\"\n        this.content = obj?.content ?? \"Lorem Ipsum\"\n        this.publisher = new User(obj?.publisher ?? {})\n        this.publishedAt = (obj?.publishedAt ? new Date(obj.publishedAt) : new Date()).toISOString()\n        this.lastEditedAt = (obj?.lastEditedAt ? new Date(obj.lastEditedAt) : new Date()).toISOString()\n        this.media = obj?.media ?? []\n    }\n\n    id: number\n    title: string\n    articleType: ArticleType\n    content: string\n    publisher: IUser\n    subtitle: string\n    publishedAt: string\n    lastEditedAt: string\n    media: string[]\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACcA,IAAqB,OAArB,MAA2C;AAAA,EAYvC,YAAY,KAAsB;AA1BtC;AA2BQ,SAAK,YAAW,gCAAK,aAAL,YAAiB;AACjC,SAAK,SAAQ,gCAAK,UAAL,YAAc;AAC3B,SAAK,eAAc,gCAAK,gBAAL,YAAoB;AACvC,SAAK,YAAW,gCAAK,aAAL,YAAiB;AACjC,SAAK,iBAAgB,2BAAK,gBAAe,IAAI,KAAK,IAAI,YAAY,IAAI,oBAAI,KAAK,GAAG,YAAY;AAAA,EAClG;AAOJ;;;AClCO,IAAK,cAAL,kBAAKA,iBAAL;AACH,EAAAA,0BAAA;AAAM,EAAAA,0BAAA;AADE,SAAAA;AAAA,GAAA;AAsBZ,IAAqB,UAArB,MAAiD;AAAA,EAY7C,YAAY,KAAyB;AAvCzC;AAwCQ,SAAK,MAAK,gCAAK,OAAL,YAAW;AACrB,SAAK,SAAQ,gCAAK,UAAL,YAAc;AAC3B,SAAK,eAAc,gCAAK,gBAAL,YAAoB;AACvC,SAAK,YAAW,gCAAK,aAAL,YAAiB;AACjC,SAAK,WAAU,gCAAK,YAAL,YAAgB;AAC/B,SAAK,YAAY,IAAI,MAAK,gCAAK,cAAL,YAAkB,CAAC,CAAC;AAC9C,SAAK,gBAAe,2BAAK,eAAc,IAAI,KAAK,IAAI,WAAW,IAAI,oBAAI,KAAK,GAAG,YAAY;AAC3F,SAAK,iBAAgB,2BAAK,gBAAe,IAAI,KAAK,IAAI,YAAY,IAAI,oBAAI,KAAK,GAAG,YAAY;AAC9F,SAAK,SAAQ,gCAAK,UAAL,YAAc,CAAC;AAAA,EAChC;AAWJ;","names":["ArticleType"]}